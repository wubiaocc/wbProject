<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/task  http://www.springframework.org/schema/task/spring-task-4.0.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.finance.communication">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<task:annotation-driven executor="taskExecutor"
		scheduler="taskScheduler" />
	<task:executor id="taskExecutor" pool-size="50" />
	<task:scheduler id="taskScheduler" pool-size="100" />






	<!-- Hibernate配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
				</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache/ehcache-hibernate-local.xml</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
				<!-- 测试使用，2012-9-29日后修改entity请修改src/sql/moa-update.sql文件 <prop key="hibernate.hbm2ddl.auto">update</prop> -->
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.finance.communication.entity</value>
			</list>
		</property>
	</bean>



	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>



	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />



	<!-- JSR303 Validator定义 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<bean class="com.finance.communication.common.SpringContextHolder"
		lazy-init="false" />



	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">yes</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">red</prop>
						<prop key="kaptcha.image.width">350</prop>
						<prop key="kaptcha.textproducer.font.size">100</prop>
						<prop key="kaptcha.image.height">150</prop>
						<prop key="kaptcha.session.key">code</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>

	<!-- Train-test环境 -->
	<beans profile="train.test">
		<context:property-placeholder
			ignore-unresolvable="true"
			location="classpath*:config/train/application-test.properties" />

		<bean id="configUtil" class="com.finance.communication.common.ConfigUtil">
			<property name="resourceAsStreamPath" value="/config/train/env.properties"></property>
		</bean>

		<!-- 数据源配置 -->
		<bean id="dataSource" class="com.finance.communication.common.DecryptDruidSource"
			destroy-method="close" init-method="init" p:driverClassName="${jdbc.driver}"
			p:url="${jdbc.url}"
			p:connectionProperties="config.decrypt=true;druid.stat.slowSqlMillis=50000;druid.stat.logSlowSql=true"
			p:username="${jdbc.username}" p:removeAbandoned="true"
			p:removeAbandonedTimeout="200" p:logAbandoned="true" p:password="${jdbc.password}"
			p:minIdle="1" p:maxActive="1000" p:poolPreparedStatements="true"
			p:maxPoolPreparedStatementPerConnectionSize="100" p:initialSize="1"
			p:maxWait="800000" p:timeBetweenEvictionRunsMillis="60000"
			p:minEvictableIdleTimeMillis="300000" p:testOnBorrow="false"
			p:testOnReturn="false" p:testWhileIdle="true" p:validationQuery="select 'x'"
			p:filters="config,stat,log4j,wall" />

	</beans>


	
</beans>